
import java.awt.Font;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.awt.event.MouseEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.nio.charset.Charset;
import java.util.TreeMap;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author hdm
 */
public class EijiroJFrame extends javax.swing.JFrame {
PropJFrame propFrm;
//public static ClassProp propC;

    /**
     * Creates new form EijiroJFrame
     */
    public EijiroJFrame() {
        initComponents();
        propFrm = new PropJFrame();
    }
    /*
    public void setPropC(ClassProp c) {
        propC = c;
    } // */
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jSplitPane2 = new javax.swing.JSplitPane();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jSplitPane3 = new javax.swing.JSplitPane();
        jSplitPane3.setDividerLocation(600);
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("英和・和英辞典");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        jTextField1.setFocusCycleRoot(true);
        jTextField1.setName("jTextField1"); // NOI18N
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jSplitPane2.setRightComponent(jTextField1);

        jButton1.setText("再検索");
        jButton1.setFocusable(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jSplitPane2.setLeftComponent(jButton1);

        jSplitPane1.setLeftComponent(jSplitPane2);

        jSplitPane3.setPreferredSize(new java.awt.Dimension(300, 70));

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jTextArea2.setMinimumSize(new java.awt.Dimension(100, 13));
        jScrollPane1.setViewportView(jTextArea2);

        jSplitPane3.setRightComponent(jScrollPane1);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane3.setViewportView(jTextArea1);

        jSplitPane3.setLeftComponent(jScrollPane3);

        jSplitPane1.setRightComponent(jSplitPane3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 531, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 295, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        readFile(true);
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String str = "";
        Toolkit kit = Toolkit.getDefaultToolkit();
        Clipboard clip = kit.getSystemSelection();
        try {
                str = (String) clip.getData(DataFlavor.stringFlavor);
        } catch (UnsupportedFlavorException e) {
                //return null;
        } catch (IOException e) {
                //return null;
        } catch (Exception e) {
                clip = kit.getSystemClipboard();
                try {
                        str = (String) clip.getData(DataFlavor.stringFlavor);
                } catch (Exception e2) {
                        //
                }
        }
        jTextField1.setText(str);
        readFile(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        eijiro.writeProp();
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EijiroJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EijiroJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EijiroJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EijiroJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new EijiroJFrame().setVisible(true);
                //EijiroJFrame eijiroFrm = new EijiroJFrame();
                

            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JSplitPane jSplitPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    public void setText(String str) {
        jTextField1.setText(str);
    }
    public void setFont(Font f) {
        jTextField1.setFont(f);
        jSplitPane2.setFont(f);
        jTextArea1.setFont(f);
        jSplitPane1.setFont(f);
        jButton1.setFont(f);
        
    }
    
    public void readFile(boolean flg) {
        String crlf = "\n";
/*		try {
                crlf = System.getProperty("line.separator");
        } catch(SecurityException e) {
        }
*/	
        jTextArea1.setText("");
        jTextArea1.repaint();
        jTextField1.setText(jTextField1.getText().trim());
        if (jTextField1.getText().equals("")) {
                        return;
        }
        
        //push
        jTextArea2.setText(jTextArea2.getText() + jTextField1.getText() + "\n");
        
        String str1 = jTextField1.getText();
        Charset chr = Charset.forName("SJIS");
        byte[] buf1 = str1.getBytes(chr);
        if(str1.length() != buf1.length){
                //和英辞典
                if (!flg) {
                    //和英の場合、起動時は検索しない
                    jTextArea1.setText("全角文字が含まれるため起動時の検索はされません。\n上のテキストフィールドでEnterキーを押してください。");
                        return;
                }
        String fld = jTextField1.getText();
        StringBuilder strWork = new StringBuilder();
                try{
                        InputStreamReader f = new InputStreamReader(new FileInputStream(eijiro.propC.WaeiPath), "utf-16");
            BufferedReader b = new BufferedReader(f);

            String s;
            while((s = b.readLine())!=null){
                if (s.indexOf(fld) > -1) {
                        strWork.append(crlf);
                        strWork.append(s);
                }
            }
            b.close();
        }catch(Exception e){
                e.printStackTrace();
                jTextArea1.setText("エラー（和英）");
        }
                strWork.append(crlf);
                strWork.append("*** 以上 *** [");
                strWork.append(fld);
                strWork.append("]");
                jTextArea1.setText(strWork.toString());
        } else {
            
            //インデックスのパス情報取得
            File fl = new File(eijiro.propC.EijiroPath);
            String separator = System.getProperty("file.separator");
            String indexPath = fl.getParent() + separator + "index";

        TreeMap<String, Long> map = new TreeMap<String, Long>();
                try{
            FileReader f = new FileReader(indexPath);
            BufferedReader b = new BufferedReader(f);
            String s;
            while((s = b.readLine())!=null){
                String s1 = s.substring(0, 1).toLowerCase();
                String s2 = s.substring(2);
                Long s2Long = Long.parseLong(s2);
                map.put(s1, s2Long);
//            	textPane.setText(textPane.getText()+"\n"+s1+":"+s2);
            }
            b.close();
//            return;
        }catch(Exception e){
                //e.printStackTrace();
                jTextArea1.setText("インデックス作成");
                try{

                        System.out.println(indexPath);
                        FileWriter fw = new FileWriter(indexPath);

                InputStreamReader f = new InputStreamReader(new FileInputStream(eijiro.propC.EijiroPath), "utf-16");
                BufferedReader b = new BufferedReader(f);
                String s;
                String strWork = "*****";
                long idx = 0;
                while((s = b.readLine())!=null){
                        String s1org = s.substring(0, 1); 
                        String s1 = s1org.toLowerCase();
                        if (!s1.equalsIgnoreCase(strWork)) {
                                //インデックス書き込み
                                fw.write(s1+","+Long.toString(idx)+"\n");
                        }
                        idx = idx + s.length() + 2;
                        strWork = s1;
                }
                b.close();
                fw.close();
                return;
                }catch(Exception e2){
                e2.printStackTrace();
                jTextArea1.setText("インデックス作成エラー");
            }
        }

        String fld = jTextField1.getText();
        String fldorg = jTextField1.getText();

        //1st
        String fst = fld.substring(0, 1);
        long idx = (Long)map.get(fst.toLowerCase());
        StringBuilder strWork = new StringBuilder();

        //英和
                try{
            InputStreamReader f = new InputStreamReader(new FileInputStream(eijiro.propC.EijiroPath), "utf-16");
            BufferedReader b = new BufferedReader(f);

            b.skip(idx);
            String s;
            boolean flg1st = true;
            while((s = b.readLine())!=null){
                if (flg1st) {
                        System.out.println(s);
                        flg1st = false;
                }
                String sl = s.toLowerCase();
                if (sl.startsWith(fld.toLowerCase()+" ")) {
                        //strWork = strWork + crlf +s;
                        strWork.append(crlf);
                        strWork.append(s);
                }
                //１文字目が変わった
                if (!fst.equalsIgnoreCase(sl.substring(0, 1))) {
                        break;
                }
            }
            b.close();
        }catch(Exception e){
                e.printStackTrace();
                jTextArea1.setText("エラー（英和）");
        }

                strWork.append(crlf);
                strWork.append("*** 以上 *** (");
                strWork.append(fldorg);
                strWork.append(")");
                jTextArea1.setText(strWork.toString());
        }

        jTextArea1.requestFocus();
        jTextArea1.setCaretPosition(jTextArea1.getDocument().getLength());
        int idxP = jTextArea1.getText().indexOf(crlf + jTextField1.getText());
        if (idxP < 0) {
                return;
        }
        idxP = idxP + crlf.length();
        jTextArea1.setCaretPosition(idxP);
        jTextArea1.setSelectionStart(idxP);
        jTextArea1.setSelectionEnd(idxP + jTextField1.getDocument().getLength());
    }
}
